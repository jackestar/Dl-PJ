name: Windows
on: 
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
jobs:
  build:
    name: Build
    runs-on: windows-latest
    strategy:

      matrix:
        qt_ver: [5.12.6,5.12.2]
        qt_target: [desktop]
        qt_arch: [win64_msvc2017_64, win32_msvc2017]

    steps:
      - name: Install Qt
        if: steps.cacheqt.outputs.cache-hit != 'true'
        uses: jurplel/install-qt-action@v2.0.0
        with:

          version: ${{ matrix.qt_ver }}

          target: ${{ matrix.qt_target }}

          arch: ${{ matrix.qt_arch }}

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: build-msvc-x64
        if: contains(matrix.qt_arch,'msvc') && contains(matrix.qt_arch,'win64')
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          qmake
          nmake

      - name: build-msvc-x86
        if: contains(matrix.qt_arch,'msvc') && contains(matrix.qt_arch,'win32')
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
          qmake
          nmake

      - name: build-mingw
        if: contains(matrix.qt_arch,'mingw')
        shell: cmd
        run: |
          qmake
          mingw32-make

      - name: CacheQt
        uses: actions/cache@v1

        if: matrix.qt_ver == '5.12.6' && matrix.qt_arch == 'win64_msvc2017_64'
        with:
          path: ${{ env.Qt5_Dir }}
          key: ${{ runner.OS }}-Qt-${{ matrix.qt_ver }}-${{ matrix.qt_target }}-${{ matrix.qt_arch }}
